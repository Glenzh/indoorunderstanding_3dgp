function [ data ] = load_gt_vp( data, annofile )
% load polytope and volume of ground-truth layout

h = 1;

gtvp = load(annofile);
data.anno.campar.f  = gtvp.K_gt(1,1)/gtvp.gt_resizefactor;  % converted back to original image scale
data.anno.campar.u0 = gtvp.K_gt(1,3)/gtvp.gt_resizefactor;
data.anno.campar.v0 = gtvp.K_gt(2,3)/gtvp.gt_resizefactor;
data.anno.campar.p  = gtvp.angle_gt.pitch;
data.anno.campar.y  = gtvp.angle_gt.yaw;
data.anno.campar.r  = gtvp.angle_gt.roll;

% [data.anno.polytope_gnd, data.anno.volume_gnd] = getPV( ...
%     data.anno.campar.f, data.anno.campar.p, ...
%     data.anno.campar.y, data.anno.campar.r, ...
%     data.anno.campar.u0, data.anno.campar.v0, ...
%     data.anno.gtPolyg, data.x.imsz, h, 1);

% [data.anno.polytope_cw, data.anno.volume_cw] = getPV( ...
%     data.anno.campar.f, data.anno.campar.p, ...
%     data.anno.campar.y, data.anno.campar.r, ...
%     data.anno.campar.u0, data.anno.campar.v0, ...
%     data.anno.gtPolyg, data.x.imsz, h, 2);

[data.anno.polytope_gnd, data.anno.volume_gnd] = getPV( ...
    data.anno.campar.f, data.anno.campar.p, ...
    data.anno.campar.y, data.anno.campar.r, ...
    data.anno.gtPolyg, data.x.imsz, h, 1);

[data.anno.polytope_cw, data.anno.volume_cw] = getPV( ...
    data.anno.campar.f, data.anno.campar.p, ...
    data.anno.campar.y, data.anno.campar.r, ...
    data.anno.gtPolyg, data.x.imsz, h, 2);


end

